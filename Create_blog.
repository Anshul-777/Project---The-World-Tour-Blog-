
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Create Your Blog</title>
  <style>
    /* Fade-up animation */
    @keyframes fadeUp { from { opacity: 0; transform: translateY(20px); } to { opacity: 1; transform: translateY(0); } }
    body { margin: 0; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; background: #f4f4f9; color: #333; animation: fadeUp 0.6s ease-out; }
    .container { max-width: 900px; margin: 80px auto; padding: 20px; background: #fff; border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.1); position: relative; }
    h1 { text-align: center; margin-bottom: 20px; }
    /* Ribbon Toolbar */
    .ribbon { background: #6c5ce7; color: #fff; padding: 10px; display: flex; flex-wrap: wrap; gap: 8px; border-radius: 5px 5px 0 0; }
    .ribbon button, .ribbon select, .ribbon input[type=color] { background: #fff; color: #333; border: 1px solid #ccc; border-radius: 4px; padding: 5px 10px; cursor: pointer; transition: background 0.3s; }
    .ribbon button:hover, .ribbon select:hover, .ribbon input[type=color]:hover { background: #f0f0f0; }
    /* Title & Editor */
    #title { width: 100%; padding: 10px; font-size: 22px; margin: 20px 0; border: 1px solid #ccc; border-radius: 4px; }
    #content { width: 100%; min-height: 300px; border: 1px solid #ccc; border-radius: 4px; padding: 15px; }
    /* Upload & Buttons */
    #uploadImage { margin: 20px 0; }
    .btn-submit, .btn-back { display: inline-block; margin: 10px 10px 0 0; border: none; padding: 12px 25px; font-size: 16px; border-radius: 6px; cursor: pointer; transition: background 0.3s, transform 0.3s; }
    .btn-submit { background: linear-gradient(135deg,#00b894,#55efc4); color: #fff; }
    .btn-submit:hover { background: linear-gradient(135deg,#55efc4,#00b894); transform: translateY(-2px); }
    .btn-back { background: #ddd; color: #333; }
    .btn-back:hover { background: #ccc; transform: translateY(-2px); }
    /* Close Button */
    .close-btn { position: fixed; top: 20px; right: 20px; background: transparent; border: none; font-size: 30px; cursor: pointer; color: #333; transition: color 0.3s; }
    .close-btn:hover { color: #6c5ce7; }
  </style>
</head>
<body>
  <!-- Close (X) button -->
  <button class="close-btn" onclick="goBack()">&times;</button>

  <div class="container">
    <h1>Create Your Blog</h1>

    <!-- Ribbon Toolbar -->
    <div class="ribbon">
      <button onclick="formatDoc('bold')" title="Bold"><b>B</b></button>
      <button onclick="formatDoc('italic')" title="Italic"><i>I</i></button>
      <button onclick="formatDoc('underline')" title="Underline"><u>U</u></button>
      <select onchange="formatDoc('formatBlock', this.value)" title="Heading">
        <option value="P">Paragraph</option>
        <option value="H1">Heading 1</option>
        <option value="H2">Heading 2</option>
        <option value="H3">Heading 3</option>
      </select>
      <select onchange="formatDoc('fontName', this.value)" title="Font">
        <option value="Arial">Arial</option>
        <option value="'Times New Roman'">Times New Roman</option>
        <option value="Georgia">Georgia</option>
        <option value="'Courier New'">Courier New</option>
      </select>
      <select onchange="formatDoc('fontSize', this.value)" title="Font Size">
        <option value="3">12px</option>
        <option value="4">14px</option>
        <option value="5">18px</option>
        <option value="6">24px</option>
        <option value="7">32px</option>
      </select>
      <input type="color" onchange="formatDoc('foreColor', this.value)" title="Font Color">
      <button onclick="formatDoc('insertUnorderedList')" title="Bullet List">• List</button>
      <button onclick="formatDoc('insertOrderedList')" title="Numbered List">1. List</button>
      <button onclick="formatDoc('justifyLeft')" title="Align Left">L</button>
      <button onclick="formatDoc('justifyCenter')" title="Center">C</button>
      <button onclick="formatDoc('justifyRight')" title="Right">R</button>
    </div>

    <!-- Blog Form -->
    <form id="create-blog-form" enctype="multipart/form-data">
      <input type="text" id="title" name="title" placeholder="Enter Blog Title" required>

      <div id="content" contenteditable="true"></div>

      <div id="uploadImage">
        <label for="imageInput">Upload Image:</label>
        <input type="file" id="imageInput" name="image" accept="image/*">
      </div>

      <button class="btn-submit" type="submit">Submit Blog</button>
      <button class="btn-back" type="button" onclick="goBack()">Back to Home</button>
    </form>
  </div>

  <script>
    // Default paragraph for execCommand
    document.addEventListener('DOMContentLoaded', () => {
      document.execCommand('defaultParagraphSeparator', false, 'p');
    });

    // Ribbon formatting
    function formatDoc(cmd, value = null) {
      document.execCommand(cmd, false, value);
    }

    // Navigate back
    function goBack() {
      history.back();
    }

    // Form submission → API
    document.getElementById('create-blog-form')
      .addEventListener('submit', async (e) => {
        e.preventDefault();

        const form = e.target;
        const title = form.title.value.trim();
        const content = document.getElementById('content').innerHTML;
        if (!title) return alert('Please enter a title.');

        const data = new FormData();
        data.append('title', title);
        data.append('content', content);
        if (form.image.files[0]) {
          data.append('image', form.image.files[0]);
        }

        const response = await fetch('http://localhost:5000/api/blogs', {
          method: 'POST',
          body: data
        });

        if (response.ok) {
          goBack();
        } else {
          alert('Submission failed');
        }
      });
  </script>
</body>
</html>
